#include <SFML/Graphics.hpp>
// #include "dino.h"
#include <iostream>

using namespace sf;
using namespace std;

int HIGHT = 600;
int WIDTH = 800;

int main() {
    VideoMode mode(Vector2u(800, 600));
    sf::RenderWindow window(mode, "SFML 3 Test");

    RectangleShape FLOOR(Vector2f(WIDTH, 50.0f));
    FLOOR.setPosition(Vector2f(0, 491.0f));

    Vector2f pos(400,425);

    Texture boy("./Resources/boy.png");
    Texture texture("/Users/alexey/gamee/build/Resources/back.jpg.jpg");

    Sprite back(texture);
    back.setPosition(Vector2f(0,0));

    View camera(pos, Vector2f(200,200));

    Sprite sprite(boy);
    sprite.setPosition(pos);
    sprite.setScale(Vector2f(0.3,0.3));

    int PLAYER_HIGHT = sprite.getGlobalBounds().size.y;
    int PLAYER_WIDTH = sprite.getGlobalBounds().size.x;

    Clock clock;
    while (window.isOpen()) {
        while (const auto e = window.pollEvent()) {
            if (e->is<sf::Event::Closed>())
                window.close();

            auto dt = clock.restart().asSeconds();

            if(const auto* kp = e->getIf<Event::KeyPressed>()){
                if(kp->scancode == Keyboard::Scancode::Space && sprite.getGlobalBounds().findIntersection(FLOOR.getGlobalBounds())){
                    sprite.move(Vector2f(0, -30));
                    sprite.move(Vector2f(0,15));
                }

                if(kp->scancode == Keyboard::Scancode::S && !sprite.getGlobalBounds().findIntersection(FLOOR.getGlobalBounds()))
                    sprite.move(Vector2f(0,15));
            }

            camera.setCenter(Vector2f(sprite.getPosition().x + PLAYER_WIDTH/2, sprite.getPosition().y + PLAYER_HIGHT/2));
        }
        
        window.clear();
        window.draw(back);
        window.draw(sprite);
        window.setView(camera);
        window.display();
    }

    return 0;
}
